List：列表
- 有序的Collection
- 允许有重复的元素
- {1, 2, 4, {5, 2}, 1}

List主要实现类
- ArrayList(非同步)
- LinkedList(非同步)
- Vector(同步)

1. ArrayList
- 以数组实现的列表，不支持同步
- 利用索引位置可以快速定位访问
- 不适合指定位置的插入、删除操作
- 适合变动不大，主要用于查询的数据
- 和Java数组相比，其容量是可以动态调整的
- ArrayList在元素填满容器时会自动扩充容器大小的50%
- 遍历性能比较：Iterator遍历性能最差，foreach性能最好

2. LinkedList：
- 以双向链表实现的列表，不支持同步
- 可被当作堆栈、队列和双端队列进行操作
- 顺序访问高效，随机访问较差，中间插入和删除高效
- 适用于经常变化的数据
- 遍历性能比较：Iterator遍历和foreach遍历效率较高，两者相差不大，for循环遍历所消耗时间远远大于前两者，所以LinkedList遍历一定不能采用for循环

3. Vector(同步)：
- 和ArrayList类似，可变数组实现的列表
- Vector同步，适合在多线程下使用
- 原本不属于JCF框架，属于最早的Java数据结构，性能较差
- 从JDK1.2开始，vector被重写，并纳入JCF
- 官方文档建议在非同步情况下优先采用ArrayList